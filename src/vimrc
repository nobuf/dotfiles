" https://github.com/square/maximum-awesome
"
filetype off                   " required!

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
" required! 
Bundle 'gmarik/vundle'
"Bundle 'paulyg/Vim-PHP-Stuff'
"Bundle 'tobiassvn/vim-gemfile'
Bundle 'kchmck/vim-coffee-script'
"Bundle 'beyondwords/vim-twig'
Bundle 'ton/vim-bufsurf'
Bundle 'altercation/vim-colors-solarized'
Bundle 'hail2u/vim-css3-syntax'
"Bundle 'cakebaker/scss-syntax.vim'
Bundle 'tpope/vim-rails'
Bundle 'tpope/vim-surround'
Bundle 'tpope/vim-markdown'
Bundle 'PProvost/vim-markdown-jekyll'
Bundle 'kien/ctrlp.vim'
Bundle "MarcWeber/vim-addon-mw-utils"
Bundle "tomtom/tlib_vim"
"Bundle "garbas/vim-snipmate"
"Bundle "honza/vim-snippets"
"Bundle 'Lokaltog/vim-easymotion'
"Bundle 'scrooloose/syntastic'
" Bundle 'mileszs/ack.vim'
Bundle 'rking/ag.vim'
"Bundle 'scrooloose/nerdcommenter'
Bundle 'tpope/vim-commentary'
"Bundle 'bronson/vim-runtest'
"Bundle 'duskhacker/sweet-rspec-vim'
"Bundle 'thoughtbot/vim-rspec'
Bundle 'skwp/vim-rspec'
Bundle 'tpope/vim-endwise'
Bundle 'slim-template/vim-slim'
Bundle 'vim-ruby/vim-ruby'
Bundle 'tpope/vim-fugitive'
Bundle 'spf13/vim-autoclose'
"Bundle 'bling/vim-airline'
Bundle 'scrooloose/nerdtree'
Bundle 'pangloss/vim-javascript'
" Bundle 'nathanaelkane/vim-indent-guides'
Bundle 'tpope/vim-repeat'
Bundle 'mustache/vim-mustache-handlebars'

filetype plugin indent on


set wildignore=log/**,node_modules/**,target/**,tmp/**,*.rbc
set autoread
set enc=utf-8
set fenc=utf-8
set iminsert=0 imsearch=0
set showcmd
set incsearch
"set nocompatible
set hlsearch
set hidden
set expandtab
set ts=2 sw=2 sts=2
set fo+=r
set shortmess+=I
set cindent
set ignorecase
set smartcase
set backspace=2
set wrapscan
set showmatch
set wildmenu
set formatoptions+=mM
set number
set ruler
set nolist
set wrap
set laststatus=2
set cmdheight=1
set title
set shortmess+=I
set nobackup
set dir=~/.vim/swap/
set vb t_vb=
set clipboard=unnamed
set synmaxcol=150
syn on

let mapleader = ','

nnoremap <C-h> :BufSurfBack<CR>
nnoremap <C-l> :BufSurfForward<CR>
" nnoremap <C-g> :Ack 
" nnoremap <C-b> :RunSpec<cr>

nmap ; :
"nnoremap : ;
noremap ;; ;

"imap jj <ESC>
imap <C-d> <DEL>
imap <C-e> <END>
imap <C-a> <HOME>
imap <C-k> <ESC><RIGHT>C

"imap ,/ </<C-X><C-O><ESC>F<i
"inoremap \[ [
"inoremap \{ {
"inoremap \( (
"inoremap \" "
"inoremap \' '
"inoremap [ []<LEFT>
"inoremap { {}<LEFT><CR><ESC>O
"inoremap ( ()<LEFT>
"inoremap " ""<LEFT>
"inoremap ' ''<LEFT>

"let g:syntastic_ruby_exec = '/Users/nobu/.rvm/rubies/ruby-1.9.3-p448/bin/ruby'

augroup reload_vimrc " {
    autocmd!
    autocmd BufWritePost $MYVIMRC source $MYVIMRC
augroup END " }

" autocmd BufReadPost,FileReadPost,BufNewFile * call system("tmux rename-window " . expand("%:t"))
"autocmd BufNewFile,BufRead ~/work/qdopp/* set tabstop=4 shiftwidth=4
" let g:ackprg = 'ag --nogroup --nocolor --column'

nmap <leader>a :Ag<space>
nmap <leader>b :CtrlPBuffer<CR>
nmap <leader>d :NERDTreeToggle<CR>
nmap <leader>f :NERDTreeFind<CR>
nmap <leader>t :CtrlP<CR>
nmap <leader>T :CtrlPClearCache<CR>:CtrlP<CR>
nmap <leader>c :ccl<CR>
nmap <leader>p :set paste<CR>
nmap <leader>P :set nopaste<CR>
" nmap <leader>h :BufSurfBack<CR>
" nmap <leader>l :BufSurfForward<CR>
nmap <leader><space> :noh<CR>


if executable('ag')
  " Use Ag over Grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
endif
